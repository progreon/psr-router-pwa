# This workflow will do:
#   a clean install of node dependencies
#   build the source code
#   run tests
#   deploy to the qa environment
#   wait for confirmation
#   deploy to the prod environment
#   merge to main
#   create release --todo
#   cleanup release/hotfix branch --todo

name: Release

on:
  push:
    branches: [ release/**, hotfix/** ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set isFirstCommit
      run: echo "isFirstCommit=$(git merge-base --is-ancestor HEAD origin/main; echo $?)" >> $GITHUB_ENV
    - name: Cancel if first commit
      if: ${{ env.isFirstCommit == 0 }}
      uses: actions/github-script@v3
      with:
        github-token: ${{ github.token }}
        script: |
          github.actions.cancelWorkflowRun({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: context.runId
          });
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Yarn install
      run: yarn
    - name: Build
      run: |
        mkdir dist
        yarn build
        cp .htaccess dist
    - name: Package
      run: |
        cd dist
        echo $(yarn -s ver) > VERSION
        zip -r dist_$(yarn -s ver)_$(date -u +%Y%m%d_%H%M%S).zip .
        cd ..
    - name: Upload build
      uses: actions/upload-artifact@v2
      with:
        name: package
        path: dist
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Test
      run: yarn test
      continue-on-error: true
  deploy-qa:
    runs-on: ubuntu-latest
    needs: [ build, test ]
    environment:
      name: psr-router.dev
    steps:
    - name: Download build
      uses: actions/download-artifact@v2
      with:
        name: package
    - name: Deploy to server
      uses: SamKirkland/FTP-Deploy-Action@4.0.0
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USER }}
        password: ${{ secrets.FTP_PASS }}
        local-dir: ./
        server-dir: ./
  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-qa
    environment:
      name: psr-router.main
    steps:
    - name: Download build
      uses: actions/download-artifact@v2
      with:
        name: package
    - name: Deploy to server
      uses: SamKirkland/FTP-Deploy-Action@4.0.0
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USER }}
        password: ${{ secrets.FTP_PASS }}
        local-dir: ./
        server-dir: ./
  merge-to-main:
    runs-on: ubuntu-latest
    needs: deploy-prod
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Setting variables
      run: |
        echo "VERSION=$(yarn -s ver)" >> $GITHUB_ENV
    - name: Setup git
      uses: ./.github/actions/prepare-git
      with:
        token: ${{ github.token }}
    - name: Checkout main
      run: git checkout --track origin/main
    - name: Merge to main
      run: |
        git merge --no-ff -m "Merge branch $GITHUB_REF into main" "$GITHUB_REF"
        git push --all
