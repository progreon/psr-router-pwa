# This workflow will do:
#   a clean install of node dependencies
#   build the source code
#   run tests
#   wait for confirmation
#   deploy to github pages
#   merge to main
#   create release --todo
#   cleanup release/hotfix branch --todo

name: Release

on:
  push:
    branches: [ release/**, hotfix/** ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set isFirstCommit
      run: echo "isFirstCommit=$(git merge-base --is-ancestor HEAD origin/main; echo $?)" >> $GITHUB_ENV
    - name: Cancel if first commit
      if: ${{ env.isFirstCommit == 0 }}
      uses: actions/github-script@v3
      with:
        github-token: ${{ github.token }}
        script: |
          github.actions.cancelWorkflowRun({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: context.runId
          });
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 19.x
    - name: Yarn install
      run: yarn
    - name: Build
      id: build
      run: |
        yarn build
        cp .htaccess dist
        cp CNAME dist
        cp dist/index.html dist/404.html
    - name: Package
      run: |
        cd dist
        echo $(yarn -s ver) > VERSION
        zip -r dist_$(yarn -s ver)_$(date -u +%Y%m%d_%H%M%S).zip .
        cd ..
    - name: Upload build
      uses: actions/upload-artifact@v4
      with:
        name: package
        path: dist
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: dist
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Test
      run: yarn test
      continue-on-error: true
  deploy:
    runs-on: ubuntu-latest
    needs: [ build, test ]
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
  merge-and-release:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 19.x
    - name: Setting variables
      run: |
        echo "VERSION=$(yarn -s ver)" >> $GITHUB_ENV
    - name: Setup git
      uses: ./.github/actions/prepare-git
      with:
        token: ${{ github.token }}
    - name: Checkout main
      run: git checkout --track origin/main
    - name: Merge to main
      run: |
        git merge --no-ff -m "Merge branch $GITHUB_REF into main" "$GITHUB_REF"
        git push --all
    - name: Download build
      uses: actions/download-artifact@v2
      with:
        name: package
        path: dist
    - name: Get zip path
      run: echo "ZIP=$(echo dist/dist_*)" >> $GITHUB_ENV
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        commitish: main
        prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.ZIP }}
        asset_name: dist.zip
        asset_content_type: application/zip
